.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "SnapsInAZfs" "8" "June 2023" "SnapsInAZfs 1.0.0-Beta1" ""
.hy
.SH Name
.PP
SnapsInAZfs - Snapshot manager for ZFS on Linux
.SH Synopsis
.PP
\f[B]SnapsInAZfs\f[R] [options]
.SH Description
.PP
SnapsInAZfs (SIAZ) is a snapshot manager for ZFS on Linux.
.SH Options
.TP
\f[B]--check-zfs-properties\f[R], \f[B]-CheckZfsProperties\f[R]
Causes SnapsInAZfs to check all pool root filesystems for expected
properties that must be defined, and performs minimal validation on the
correctness of their values, if defined, and then exits without
performing any further actions.
Missing or incorrect properties will be reported via nlog.
Exit status will indicate the general result of the check.
.TP
\f[B]--configconsole\f[R], \f[B]--config-console\f[R], \f[B]-ConfigConsole\f[R]
Launches SnapsInAZfs\[cq]s built-in interactive configuration console.
Upon exit from the configuration console, SnapsInAZfs exits.
Cannot be specified with most other command line options.
.TP
\f[B]--cron\f[R], \f[B]-Cron\f[R]
Create snapshots and prune expired snapshots.
Equivalent to specifying both --take-snapshots and --prune-snapshots.
.TP
\f[B]-vv\f[R], \f[B]--debug\f[R], \f[B]-Debug\f[R]
Debug level output logging.
Change log level in SnapsInAZfs.nlog.json for normal usage.
Very verbose and logs many operations that are not relevant outside of a
troubleshooting or debugging context.
Not recommended for use in normal operation.
.TP
\f[B]-n\f[R], \f[B]--dryrun\f[R], \f[B]--dry-run\f[R], \f[B]--readonly\f[R], \f[B]--read-only\f[R], \f[B]-DryRun\f[R]
Skip creation/deletion of snapshots (Simulate).
SnapsInAZfs will pretend to perform configured actions and report what
it \f[I]would\f[R] have done.
No operations that create or destroy ZFS snapshots will be performed,
regardless of configuration or other command-line options.
If configuration or command line options request to create or prune
snapshots, this option will \f[I]simulate\f[R] those actions without
making changes to ZFS.
.TP
\f[B]-h\f[R], \f[B]--help\f[R], \f[B]-Help\f[R]
Displays usage information on the command line.
.TP
\f[B]--no-prune-snapshots\f[R], \f[B]-NoPruneSnapshots\f[R]
Opposite of --prune-snapshots.
Will prevent ANY snapshots from being pruned, regardless of configured
values.
Supercedes --prune-snapshots and --force-prune.
.TP
\f[B]--no-take-snapshots\f[R], \f[B]-NoTakeSnapshots\f[R]
Opposite of --prune-snapshots.
Will prevent ANY new snapshots from being taken, regardless of
configured values.
Supercedes --take-snapshots.
.TP
\f[B]--prepare-zfs-properties\f[R], \f[B]-PrepareZfsProperties\f[R]
Causes SnapsInAZfs to check all pool root filesystems for expected
properties that must be defined, and performs minimal validation on the
correctness of their values, if defined.
Missing properties will be created and set to default values, and
invalid properties will be set to default values.
Valid existing values will not be changed.
Exit status indicates the status of the zfs actions performed.
.TP
\f[B]--prune-snapshots\f[R], \f[B]-PruneSnapshots\f[R]
Causes SnapsInAZfs to prune existing eligible snapshots according to the
policy configuration specified in ZFS and associated templates, except
for file systems or volumes that are currently involved in a
\f[V]zfs send\f[R] or \f[V]zfs receive\f[R] operation.
To force pruning even for such datasets, use \f[B]--force-prune\f[R].
.TP
\f[B]-q\f[R], \f[B]--quiet\f[R], \f[B]-Quiet\f[R]
Warn level output logging.
Suppress non-error output.
WILL WARN BEFORE SETTING IS APPLIED.
Configure logging in SnapsInAZfs.nlog.json for normal usage.
.TP
\f[B]-qq\f[R], \f[B]--really-quiet\f[R], \f[B]-ReallyQuiet\f[R]
No output logging.
Change log level to Off in SnapsInAZfs.nlog.json to set for normal
usage.
If nlog is configured for Trace logging in SnapsInAZfs.nlog.json, there
may be logging output before this argument is parsed.
.TP
\f[B]--take-snapshots\f[R], \f[B]-TakeSnapshots\f[R]
Causes SnapsInAZfs to take snapshots according to the policy
configuration specified in ZFS and associated templates.
.TP
\f[B]-vvv\f[R], \f[B]--trace\f[R], \f[B]-Trace\f[R]
Trace level output logging.
Change log level in SnapsInAZfs.nlog.json for normal usage.
Extremely verbose and logs many operations that are not relevant outside
of a debugging context.
Strongly recommended against use in normal operations.
.TP
\f[B]-v\f[R], \f[B]--verbose\f[R], \f[B]-Verbose\f[R]
Info level output logging.
Change log level in SnapsInAZfs.nlog.json for normal usage.
This is the default setting for console logging in
SnapsInAZfs.nlog.json.
Specifying this whith default SnapsInAZfs.nlog.json settings will have
no effect on output.
.TP
\f[B]-V\f[R], \f[B]--version\f[R], \f[B]-Version\f[R]
Outputs SnapsInAZfs version to configured logging targets and exits,
performing no other operations.
.SH Examples
.PP
These are potential common usage scenarios.
.PD 0
.P
.PD
These scenarios assume your SnapsInAZfs.local.json file has
TakeSnapshots and PruneSnapshots set to true and DryRun set to false,
unless otherwise noted.
.PP
\f[B]Note:\f[R] for \f[B]\f[BI]ALL\f[B]\f[R] invocations of SIAZ,
including when \f[V]-\[rs]-\[rs]dry-run\f[R] or
\f[V]-\[rs]-config-console\f[R] are specified, SIAZ will
\f[B]\f[BI]ALWAYS\f[B]\f[R] check for existence of and very basic
validity of the ZFS user properties it needs to operate.
.PD 0
.P
.PD
If missing or invalid properties are detected on any pool roots, SIAZ
will terminate with an exit code and with log output indicating
what\[cq]s wrong.
.PP
SIAZ does not currently support configurations having only some pools
with SIAZ properties defined.
.SS General Usage
.PP
Normal Use:
.IP
.nf
\f[C]
$ SnapsInAZfs
\f[R]
.fi
.PP
If invoked with no command line options, SIAZ will first check for
expected ZFS property schema on all pool roots, and, if valid, will
first take snapshots and then prune snapshots, as configured.
.PP
Dry Run - Test/Simulation Mode:
.IP
.nf
\f[C]
$ SnapsInAZfs \[rs]-\[rs]-dry-run
\f[R]
.fi
.PP
Useful for testing configuration changes without making any changes to
ZFS.
Has the same effect as setting DryRun to true in the JSON configuration
files.
All other arguments behave as normal, with the exception that, no matter
which other arguments are specified, no changes will be made to ZFS (ie
no snapshots will be taken or pruned, and no properties will be
altered).
.SS Backup/Replication
.PP
Skip taking new snapshots and only prune expired snapshots:
.IP
.nf
\f[C]
$ SnapsInAZfs \[rs]-\[rs]-no-take-snapshots
\f[R]
.fi
.PP
Useful on systems that receive snapshots from another system, such as in
a backup/replication setup, and the system does not need to take new
snapshots, but should prune old snapshots.
While it is recommended that you do this via configuration, rather than
via command-line arguments, this may provide a helpful guarantee, even
if accidental changes are made or new datasets are received, no new
snapshots will be taken.
.PD 0
.P
.PD
Also useful if you have just made a configuration change that would
result in more snapshots being pruned, and you wish to manually run SIAZ
to observe the results, possibly with a more verbose logging argument or
dry run, as well.
.SS Viewing SIAZ Logs
.PP
View log entries logged to the system journal when running as a service:
.IP
.nf
\f[C]
$ journalctl -xe --namespace snapsinazfs
\f[R]
.fi
.PP
SnapsInAZfs writes its system journal entries to the snapsinazfs
namespace, when it is running as a service under systemd, by default.
.PD 0
.P
.PD
This means it will not show up without specifying
\f[V]\[rs]-\[rs]-namespace snapsinazfs\f[R], which is intentional, to
keep it from cluttering up your system journal.
.PP
View text log files created by default logging rules:
.IP
.nf
\f[C]
$ less /var/log/SnapsInAZfs/nlog-all-\[rs]{yyyy-MM-dd\[rs]}.log
\f[R]
.fi
.SH Exit Status
.PP
0 Exit code indicates success
.PD 0
.P
.PD
Non-zero exit codes indicate an error or some other condition that
should result in termination of or allow specific handling in scripts.
.IP \[bu] 2
0: Normal exit status - Requested operations completed successfully or
with no fatal errors.
.IP \[bu] 2
11: EAGAIN - The SIAZ mutex was abandoned by a previous invocation.
Try again
.IP \[bu] 2
16: EBUSY - The SIAZ mutex could not be acquired because another
instance is already running.
.IP \[bu] 2
17: EEXIST - The SIAZ mutex could not be acquired
.IP \[bu] 2
22: EINVAL - An IO exception occurred while trying to acquire the mutex
that ensures only one instance of SIAZ can run at a time.
.IP \[bu] 2
37: ENOLCK - The SIAZ mutex was null.
Execution is not safe to continue.
.IP \[bu] 2
127: ECANCELED - Help or Version CLI argument was specified.
Used to prevent inadvertent inclusion of those arguments in scripts.
.IP \[bu] 2
1079: EFTYPE - One or more JSON configuration files were missing or
invalid
.IP \[bu] 2
1093: ENOATTR - The ZFS property schema is not valid or an attempt to
update the ZFS property schema failed.
.SH Copyright
.PP
SnapsInAZfs is created by Brandon Thetford and is inspired by sanoid,
created by Jim Salter.
.PD 0
.P
.PD
This software is licensed for use under the Free Software
Foundation\[cq]s GPL v3.0 license, or later.
See https://www.gnu.org/licenses/gpl-3.0.html
.SH AUTHORS
Brandon Thetford.
